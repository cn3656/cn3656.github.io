<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo 添加第三方评论模块 twikoo</title>
      <link href="/articles/hexotwikoo/"/>
      <url>/articles/hexotwikoo/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-添加第三方评论模块-twikoo"><a href="#hexo-添加第三方评论模块-twikoo" class="headerlink" title="hexo 添加第三方评论模块 twikoo"></a>hexo 添加第三方评论模块 twikoo</h1><p>注意</p><p>Vercel 部署的环境需配合 1.4.0 以上版本的 twikoo.js 使用</p><p>默认域名 <code>*.vercel.app</code> 在中国大陆访问速度较慢甚至无法访问，绑定自己的域名可以提高访问速度</p><p><a href="https://www.bilibili.com/video/BV1Fh411e7ZH">查看视频教程</a></p><ol><li>申请 <a href="https://twikoo.js.org/mongodb-atlas.html">MongoDB Atlas</a> 账号，获取 MongoDB 连接字符串</li><li>申请 <a href="https://vercel.com/signup">Vercel</a> 账号</li><li>点击以下按钮将 Twikoo 一键部署到 Vercel</li></ol><p><a href="https://vercel.com/import/project?template=https://github.com/twikoojs/twikoo/tree/main/src/server/vercel-min"><img src="https://vercel.com/button" alt="Deploy"></a></p><ol><li>进入 Settings - Environment Variables，添加环境变量 <code>MONGODB_URI</code>，值为前面记录的数据库连接字符串</li><li>进入 Settings - Deployment Protection，设置 Vercel Authentication 为 Disabled，并 Save</li></ol><p><a href="https://twikoo.js.org/assets/vercel-1.Czytea8u.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/vercel-1.Czytea8u.jpeg" alt="img"></a></p><ol><li>进入 Deployments , 然后在任意一项后面点击更多（三个点） , 然后点击 Redeploy , 最后点击下面的 Redeploy</li><li>进入 Overview，点击 Domains 下方的链接，如果环境配置正确，可以看到 “Twikoo 云函数运行正常” 的提示</li><li>Vercel Domains（包含 <code>https://</code> 前缀，例如 <code>https://xxx.vercel.app</code>）即为您的环境 id</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> twikoo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科技lion一键 脚本  Linux服务器运维工具箱 监控管理建站一个脚本全搞定！</title>
      <link href="/articles/linuxshell/"/>
      <url>/articles/linuxshell/</url>
      
        <content type="html"><![CDATA[<h1 id="科技lion一键-脚本-Linux服务器运维工具箱-监控管理建站一个脚本全搞定！"><a href="#科技lion一键-脚本-Linux服务器运维工具箱-监控管理建站一个脚本全搞定！" class="headerlink" title="科技lion一键 脚本  Linux服务器运维工具箱 监控管理建站一个脚本全搞定！"></a>科技lion一键 脚本  Linux服务器运维工具箱 监控管理建站一个脚本全搞定！</h1><p>本文源自科技lion博客，仅记录个人使用。感谢大佬分享！</p><p>原文链接：<a href="https://blog.kejilion.pro/kejilion-sh/">https://blog.kejilion.pro/kejilion-sh/</a></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/20241005171947.png" alt="img"></p><p>科技Lion的Shell脚本工具是一款全能脚本工具箱，使用shell脚本编写。专为Linux服务器监控、测试和管理而设计。无论您是初学者还是经验丰富的用户，该工具都能为您提供便捷的解决方案。集成了独创的Docker管理功能，让您轻松管理容器化应用；LNMP建站解决方案能帮助您快速搭建网站，站点优化，防御，备份还原迁移一应俱全；并且整合了各类系统工具面板的安装及使用，使系统维护变得更加简单。我们的目标是成为全网最优秀的VPS一键脚本工具，为用户提供高效、便捷的科技支持。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="安装基础组件"><a href="#安装基础组件" class="headerlink" title="安装基础组件"></a>安装基础组件</h3><p><strong>Debian&#x2F;Ubuntu</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y curl</span><br></pre></td></tr></table></figure><p><strong>CentOS&#x2F;RedHat&#x2F;Fedora&#x2F;AlmaLinux&#x2F;Rocky Linux</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update &amp;&amp; yum install -y curl</span><br></pre></td></tr></table></figure><p><strong>Alpine Linux</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk update &amp;&amp; apk add curl</span><br></pre></td></tr></table></figure><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sL kejilion.sh)</span><br></pre></td></tr></table></figure><h2 id="脚本主界面"><a href="#脚本主界面" class="headerlink" title="脚本主界面"></a><strong>脚本主界面</strong></h2><p>脚本全面支持Ubuntu、Debian，Cent OS和Alpine Linux系统</p><p>只要执行命令自动获取最新版本</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/20241005183921.png" alt="img"></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h4 id="docker管理器"><a href="#docker管理器" class="headerlink" title="docker管理器"></a><strong>docker管理器</strong></h4><p>轻松安装管理你的docker容器，无需安装任何可视化面板。操作优雅直觉！</p><h4 id="LDNMP建站"><a href="#LDNMP建站" class="headerlink" title="LDNMP建站"></a><strong>LDNMP建站</strong></h4><p>LDNMP建站系统，超凡的快速建站方案，多站共存都是一键搞定。站点管理防护优化一应俱全。</p><h4 id="面板工具集合"><a href="#面板工具集合" class="headerlink" title="面板工具集合"></a><strong>面板工具集合</strong></h4><p>集合了时下流行的VPS面板应用程序，一键快速搭建。安装完成即可使用。安装后动态管理已安装的面板应用。</p><h4 id="系统工具集合"><a href="#系统工具集合" class="headerlink" title="系统工具集合"></a><strong>系统工具集合</strong></h4><p>集合了对Linux各项系统管理等基础操作，方便小伙伴优雅使用。调整VPS参数不需要记住繁琐命令，一键搞定。</p><h4 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a><strong>更多功能</strong></h4><p>还有更多功能等待着大家自己发掘。欢迎提供宝贵意见，希望一键化脚本工具越来越强大。帮助小伙伴们使用VPS管理VPS。</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小雅alist整合脚本</title>
      <link href="/articles/xiaoyaalist/"/>
      <url>/articles/xiaoyaalist/</url>
      
        <content type="html"><![CDATA[<h1 id="小雅alist整合脚本"><a href="#小雅alist整合脚本" class="headerlink" title="小雅alist整合脚本"></a>小雅alist整合脚本</h1><p>感谢DDSRem技术大佬贡献的整合脚本</p><p>原文出处：<a href="https://blog.ddsrem.com/archives/alist-xiaoya">https://blog.ddsrem.com/archives/alist-xiaoya</a></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/31/48a4ab8aa94579c4e78f55c6cfd45b75-image-20240531074844687-36d4c3.png" alt="image-20240531074844687"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/31/fb7818f800c6ddf5c430f91244a7a471-image-5c46fa.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/31/e550189f0b42c58a97d883f3e0bc6f70-image-1-f7dae5.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/31/8981d50b084e66ce5de8845bc38c36dc-image-2-ca9212.png" alt="img"></p><h2 id="main-sh"><a href="#main-sh" class="headerlink" title="main.sh"></a>main.sh</h2><blockquote><p>[!NOTE]<br>整合安装脚本，内置所有相关软件的安装。</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash -c &quot;$(curl --insecure -fsSL https://ddsrem.com/xiaoya_install.sh)&quot;</span><br></pre></td></tr></table></figure><p><strong>备用地址</strong></p><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash &lt;(curl --insecure -fsSL https://ddsrem.com/xiaoya/all_in_one.sh)</span><br></pre></td></tr></table></figure><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash &lt;(curl --insecure -fsSL https://fastly.jsdelivr.net/gh/DDS-Derek/xiaoya-alist@latest/all_in_one.sh)</span><br></pre></td></tr></table></figure><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash &lt;(curl --insecure -fsSL https://raw.githubusercontent.com/DDS-Derek/xiaoya-alist/master/all_in_one.sh)</span><br></pre></td></tr></table></figure><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash -c &quot;$(curl --insecure -fsSL https://fastly.jsdelivr.net/gh/DDS-Derek/xiaoya-alist@latest/main.sh)&quot;</span><br></pre></td></tr></table></figure><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01bash -c &quot;$(curl --insecure -fsSL https://raw.githubusercontent.com/DDS-Derek/xiaoya-alist/master/main.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="功能列表"><a href="#功能列表" class="headerlink" title="功能列表"></a>功能列表</h3><blockquote><p>[!NOTE]<br>数字代表先选x，再选x，再选x</p><p>PS: 2 2 8代表先选2，再选2，最后选8</p></blockquote><p><strong>普通功能</strong></p><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">01020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758———————————————————————————————————————安装———————————————————————————————————————</span><br><span class="line">安装 小雅Alist -&gt; 1 1</span><br><span class="line">安装 小雅Alist-TVBox -&gt; 5 1</span><br><span class="line">安装/更新 小雅助手（xiaoyahelper）-&gt; 4 1</span><br><span class="line">安装 Onelist -&gt; 6 1</span><br><span class="line">安装 Portainer -&gt; 7 1 1</span><br><span class="line">安装 Emby全家桶（一键） -&gt; 2 1</span><br><span class="line">安装 Jellyfin全家桶（一键） -&gt; 3 1</span><br><span class="line">安装 Resilio-Sync（单独） -&gt; 2 5 1</span><br><span class="line">安装 Auto_Symlink -&gt; 7 2 1</span><br><span class="line">——————————————————————————————Emby手动全家桶配置————————————————————————————————————</span><br><span class="line">单独 下载并解压 全部元数据 -&gt; 2 2 1</span><br><span class="line">单独 解压 全部元数据 -&gt; 2 2 2</span><br><span class="line">单独 下载 all.mp4 -&gt; 2 2 3</span><br><span class="line">单独 解压 all.mp4 -&gt; 2 2 4</span><br><span class="line">解压 all.mp4 的指定元数据目录【非全部解压】-&gt; 2 2 5</span><br><span class="line">单独 下载 config.mp4 -&gt; 2 2 6</span><br><span class="line">单独 解压 config.mp4 -&gt; 2 2 7</span><br><span class="line">单独 下载 pikpak.mp4 -&gt; 2 2 8</span><br><span class="line">单独 解压 pikpak.mp4 -&gt; 2 2 9</span><br><span class="line">选择 下载器【aria2/wget】-&gt; 2 2 10</span><br><span class="line">单独 安装Emby（可选择版本，支持官方，amilys，lovechen）-&gt; 2 3</span><br><span class="line">立即 同步小雅Emby的config目录 -&gt; 2 6</span><br><span class="line">单独 创建/删除 同步定时更新任务 -&gt; 2 7</span><br><span class="line">图形化编辑 emby_config.txt -&gt; 2 8</span><br><span class="line">————————————————————————————Jellyfin手动全家桶配置——————————————————————————————————</span><br><span class="line">单独 下载并解压 全部元数据 -&gt; 3 2 1</span><br><span class="line">单独 解压 全部元数据 -&gt; 3 2 2</span><br><span class="line">单独 下载 all_jf.mp4 -&gt; 3 2 3</span><br><span class="line">单独 解压 all_jf.mp4 -&gt; 3 2 4</span><br><span class="line">解压 all_jf.mp4 的指定元数据目录【非全部解压】-&gt; 3 2 5</span><br><span class="line">单独 下载 config_jf.mp4 -&gt; 3 2 6</span><br><span class="line">单独 解压 config_jf.mp4 -&gt; 3 2 7</span><br><span class="line">单独 下载 PikPak_jf.mp4 -&gt; 3 2 8</span><br><span class="line">单独 解压 PikPak_jf.mp4 -&gt; 3 2 9</span><br><span class="line">选择 下载器【aria2/wget】-&gt; 3 2 10</span><br><span class="line">单独 安装Jellyfin-&gt; 3 3</span><br><span class="line">———————————————————————————————————————更新———————————————————————————————————————</span><br><span class="line">更新 小雅Alist-TVBox -&gt; 5 2</span><br><span class="line">更新 小雅Alist -&gt; 1 2</span><br><span class="line">更新 Resilio-Sync（单独） -&gt; 2 5 2</span><br><span class="line">更新 Onelist -&gt; 6 2</span><br><span class="line">更新 Portainer -&gt; 7 1 2</span><br><span class="line">更新 Auto_Symlink -&gt; 7 2 2</span><br><span class="line">———————————————————————————————————————卸载———————————————————————————————————————</span><br><span class="line">卸载 小雅Alist -&gt; 1 3</span><br><span class="line">卸载 Emby全家桶 -&gt; 2 9</span><br><span class="line">卸载 卸载Jellyfin全家桶 -&gt; 3 4</span><br><span class="line">卸载 Resilio-Sync（单独） -&gt; 2 5 3</span><br><span class="line">卸载 小雅助手（xiaoyahelper）-&gt; 4 3</span><br><span class="line">卸载 小雅Alist-TVBox -&gt; 5 3</span><br><span class="line">卸载 Onelist -&gt; 6 3</span><br><span class="line">卸载 Portainer -&gt; 7 1 3</span><br><span class="line">卸载 Auto_Symlink -&gt; 7 2 3</span><br><span class="line">——————————————————————————————————————系统工具——————————————————————————————————————</span><br><span class="line">查看系统磁盘挂载 -&gt; 7 3</span><br><span class="line">———————————————————————————————————————其他———————————————————————————————————————</span><br><span class="line">一次性运行 小雅助手（xiaoyahelper）-&gt; 4 2</span><br></pre></td></tr></table></figure><p><strong>高级功能</strong></p><p>shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0102030405Docker启动容器名称设置 -&gt; 8 1</span><br><span class="line">是否开启容器运行额外参数添加 -&gt; 8 2</span><br><span class="line">重置脚本配置 -&gt; 8 3</span><br><span class="line">开启/关闭 磁盘容量检测 -&gt; 8 4</span><br><span class="line">开启/关闭 小雅连通性检测 -&gt; 8 5</span><br></pre></td></tr></table></figure><h2 id="相关地址"><a href="#相关地址" class="headerlink" title="相关地址"></a>相关地址</h2><p><a href="https://github.com/DDS-Derek/xiaoya-alist">https://github.com/DDS-Derek/xiaoya-alist</a></p><p>小雅官方 <a href="https://t.me/xiaoyaliu00">Telegram</a> 交流群</p><h2 id="通用兼容性测试报告"><a href="#通用兼容性测试报告" class="headerlink" title="通用兼容性测试报告"></a>通用兼容性测试报告</h2><table><thead><tr><th>系统名称</th><th>main.sh</th><th>emby_config_editor.sh</th></tr></thead><tbody><tr><td>CentOS 7.9</td><td>✅</td><td>✅</td></tr><tr><td>CentOS 8.4</td><td>✅</td><td>✅</td></tr><tr><td>CentOS 8 Stream</td><td>✅</td><td>✅</td></tr><tr><td>CentOS 9 Stream</td><td>✅</td><td>✅</td></tr><tr><td>Debian 10.3</td><td>✅</td><td>✅</td></tr><tr><td>Debian 11.3</td><td>✅</td><td>✅</td></tr><tr><td>Debian 12.0</td><td>✅</td><td>✅</td></tr><tr><td>Ubuntu 18.04</td><td>✅</td><td>✅</td></tr><tr><td>Ubuntu 20.04</td><td>✅</td><td>✅</td></tr><tr><td>Ubuntu 22.04</td><td>✅</td><td>✅</td></tr><tr><td>Fedora 31</td><td>✅</td><td>✅</td></tr><tr><td>Fedora 32</td><td>✅</td><td>✅</td></tr><tr><td>AlmaLinux 9</td><td>✅</td><td>✅</td></tr><tr><td>RockyLinux 8.6</td><td>✅</td><td>✅</td></tr><tr><td>Arch Linux</td><td>✅</td><td>✅</td></tr><tr><td>openSUSE 15.4</td><td>✅</td><td>✅</td></tr><tr><td>FreeBSD</td><td>✅</td><td>✅</td></tr><tr><td>EulerOS</td><td>✅</td><td>✅</td></tr><tr><td>Amazon Linux</td><td>✅</td><td>✅</td></tr><tr><td>Alpine</td><td>✅</td><td>✅</td></tr><tr><td>UnRaid</td><td>✅</td><td>✅</td></tr><tr><td>OpenMediaVault</td><td>✅</td><td>✅</td></tr><tr><td>QNAP</td><td>✅</td><td>✅</td></tr><tr><td>OpenWRT</td><td>✅</td><td>✅</td></tr><tr><td>Synology</td><td>✅</td><td>✅</td></tr><tr><td>TrueNAS CORE</td><td>✅</td><td>✅</td></tr><tr><td>TrueNAS SCALE</td><td>✅</td><td>✅</td></tr><tr><td>UGREEN</td><td>✅</td><td>✅</td></tr><tr><td>LibreELEC</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><ul><li><p>请勿将 小雅系列软件 用于商业用途。</p></li><li><p>请勿将 小雅系列软件 用于任何违反法律法规的行为。</p></li><li><p>本仓库所有脚本均基于官方脚本制作，使用请自行承担数据损失但不限于此的风险。</p></li></ul><h2 id="小雅周边工具集合"><a href="#小雅周边工具集合" class="headerlink" title="小雅周边工具集合"></a>小雅周边工具集合</h2><ul><li><a href="https://pcoof.com/git/https://github.com/catvod/CatVodOpen">CatVod</a>: 猫影视</li><li><a href="https://github.com/ypq123456789/xiaoya-convert">Xiaoya-convert</a>: 自动批量将阿里云盘分享链接转换为小雅<code>alishare_list.txt</code>中的格式</li><li><a href="https://github.com/DDS-Derek/xiaoya-alist/tree/master/xiaoyahelper">Xiaoyahelper</a>: 一劳永逸的小雅转存清理工具</li><li><a href="https://hub.docker.com/r/haroldli/alist-tvbox">Alist-TVBox</a>: 一个基于<code>AList</code>和<code>xiaoya</code>的<code>TVBox</code>管理工具</li><li><a href="https://xiaoyaliu.notion.site/strm-2c8d136ceb37445fb6c0222eafb966ce"><code>strm</code>文件生成</a>: 小雅官方提供的一键生成<code>strm</code>文件脚本</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alist </tag>
            
            <tag> 家庭影院 </tag>
            
            <tag> 小雅alist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alist 阿里云盘open</title>
      <link href="/articles/alistaliyun/"/>
      <url>/articles/alistaliyun/</url>
      
        <content type="html"><![CDATA[<h1 id="alist-阿里云盘open"><a href="#alist-阿里云盘open" class="headerlink" title="alist 阿里云盘open"></a>alist 阿里云盘open</h1><p>本文源自网络，转载请标明出处。</p><p>原文链接：<a href="https://www.cnblogs.com/anyview/p/17357064.html">https://www.cnblogs.com/anyview/p/17357064.html</a></p><p>1、首先，要确保你的Alist版本为v3.12.0（或者以上的版本）；</p><p><a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326084-1.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326084-1-20241005162604789.jpg" alt="img"></a></p><p>2、在电脑的浏览器打开【<a href="https://alist.nn.ci/tool/aliyundrive/request">这个地址</a>】，如果你要输入账号密码那就点“Go to login”，我这里选择用手机APP扫码所以点“Scan QrCode”（这两种方式都可以，根据自己操作习惯选择）；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326086-2.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326086-2-20241005162609902.jpg" alt="img"></a></p><p>3、网页会显示一个二维码，打开手机上的阿里云盘APP，扫码；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326087-3.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326087-3-20241005162613478.jpg" alt="img"></a></p><p>4、在手机APP弹出的“Alist申请权限”对话框里点“同意”；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326088-4.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326088-4-20241005162618043.jpg" alt="img"></a></p><p>5、在电脑浏览器上点“I have scan”；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326090-5.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326090-5-20241005162624695.jpg" alt="img"></a></p><p>6、网页上显示有“refresh_token”的内容，选中全部的内容，复制；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326091-6.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326091-6-20241005162628283.jpg" alt="img"></a></p><p>7、在Alist后台管理的菜单，存储，添加；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326093-7.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326093-7-20241005162634332.jpg" alt="img"></a></p><p>8、类型选“阿里云盘开放平台”；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326095-8.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326095-8-20241005162639301.jpg" alt="img"></a></p><p>9、挂载路径选择根目录填写&#x2F;<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326099-9.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326099-9-20241005162642290.jpg" alt="img"></a></p><p>10、在刷新令牌处，把第6个步骤复制的“refresh_token”的全部内容，粘贴进去，添加；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326100-10.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326100-10-20241005162645141.jpg" alt="img"></a></p><p>11、此时后台已经能看到添加好的阿里云盘开放平台了；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326102-11.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326102-11-20241005162648010.jpg" alt="img"></a></p><p>12、打开Alist，前端已经可以看到刚刚添加的阿里云盘；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326103-12.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326103-12-20241005162650566.jpg" alt="img"></a></p><p>13、点进去，就可以看到你挂载的阿里云盘里面的内容；<a href="https://wp.gxnas.com/wp-content/uploads/2023/02/1677326104-13.jpg"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1677326104-13-20241005162655163.jpg" alt="img"></a></p><p>14、找个视频，测试一下播放，没有问题，拖动也没有问题；</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alist </tag>
            
            <tag> 阿里云盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE安装iStoreOS手把手图文教程</title>
      <link href="/articles/pvesetupistoreos/"/>
      <url>/articles/pvesetupistoreos/</url>
      
        <content type="html"><![CDATA[<h1 id="PVE安装iStoreOS手把手图文教程"><a href="#PVE安装iStoreOS手把手图文教程" class="headerlink" title="PVE安装iStoreOS手把手图文教程"></a>PVE安装iStoreOS手把手图文教程</h1><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515015524901.png" alt="image-20240515015524901"></p><h2 id="iStoreOS介绍"><a href="#iStoreOS介绍" class="headerlink" title="iStoreOS介绍"></a>iStoreOS介绍</h2><p>想必大家对梅林路由器系统很熟悉，我的主路由也是Netgear网件刷的梅林并安装几个好用的插件，一直稳定服役多年，iStoreOS系统同样也是梅林的开发团队制作，iStoreOS是基于Openwrt深度定制编译，加入了亲切的向导跟插件商店等功能，很适合我这种小白的一款多功能软路由系统。安装了PVE系统后，选择了安装iStoreOS为旁路由，今天把安装过程分享给大家。</p><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p>iStoreOS固件需要自行下载：</p><p>关键字”KoolCenter 固件下载服务器”</p><p>进入下载页面</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996307347c76656.png_orig.jpg" alt="img"></p><p>intel AMD系统选择x86_64</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639963280470b929.png_e1080.jpg" alt="选择最近固件下载"></p><p>选择最新固件下载</p><p>把下载好的istoreos-21.02.3-2022120718-x86-64-squashfs-combined.img.gz拖到pve root里并解压缩，我这里用的FinalShell操作</p><p><code>gunzip istoreos-21.02.3-2022120718-x86-64-squashfs-combined.img.gz </code></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996782239314914.png_e1080.jpg" alt="解压缩后2.4GB"></p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>整个简要流程是按linux来设定一台虚拟机，最后再把下载的img挂载成<a href="https://www.smzdm.com/fenlei/yingpan/">硬盘</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639969782258c5191.png_e1080.jpg" alt="此处VM ID要记住待会要用"></p><p>此处VM ID要记住待会要用</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c77d355f2603.png_e1080.jpg" alt="这里先随便选一个ISO待会要删除，linux 5.x核心"></p><p>这里先随便选一个ISO待会要删除，linux 5.x核心</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639969cd712081059.png_e1080.jpg" alt="SCISI跟Single我也不清楚差别，随便选"></p><p>SCISI跟Single我也不清楚差别，随便选</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996a0ed92922076.png_e1080.jpg" alt="左边Disk删除"></p><p>左边Disk删除</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515020055170.png" alt="image-20240515020055170"></p><p>CPU3～4都可以，选host，units给高优先1024</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996a700d663823.png_e1080.jpg" alt="内存看着适当给512～1024"></p><p>内存看着适当给512～1024</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c77d79074958.png_e1080.jpg" alt="VirtiO，如果有多网卡可以后面再加入PCI直通"></p><p>VirtiO，如果有多网卡可以后面再加入PCI直通</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63997cfde8b482348.png_e1080.jpg" alt="设定完别启动，到硬件里把iso移除“Detach”"></p><p><strong>进入PVE的shell里敲入如下把img转成挂载硬盘</strong></p><p>qm importdisk &lt;你的VM ID&gt; &lt;img位置档名&gt; &lt;挂到local pve或是local-lvm&gt; </p><p>我的PVE已经删除了LVM所以是local，我建议挂载到 local, lvm维护起来坑比较多</p><p><strong>注意111改成自己的虚拟机ID号<img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/74.png" alt="PVE安装iStore手把手图文教程"></strong> </p><p><code>qm importdisk **111** /root/istoreos-21.02.3-2022120718-x86-64-squashfs-combined.img local (或者local-lvm）</code></p><p>操作正常会有如下讯息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">importing disk <span class="string">&#x27;/root/istoreos-21.02.3-2022120718-x86-64-squashfs-combined.img&#x27;</span> to VM 111 ...</span><br><span class="line"></span><br><span class="line">transferred 471.6 MiB of 471.6 MiB (100.00%)</span><br><span class="line"></span><br><span class="line">Successfully imported disk as <span class="string">&#x27;unused0:local:111/vm-111-disk-0.raw&#x27;</span></span><br></pre></td></tr></table></figure><p>会发现&#x2F;var&#x2F;lib&#x2F;vz&#x2F;images&#x2F;111 下多了raw，PVE的local虚拟机都是放在这目录里，以后需要也可以手动备份</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996db6a17e975.png_e1080.jpg" alt="硬件设定如上"></p><p>硬件设定如上</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996b30b07767617.png_e1080.jpg" alt="操作正常后到“启动BOOT”选项里设定优先启动"></p><p>操作正常后到“启动BOOT”选项里设定优先启动</p><h2 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h2><p>在VM console里，看到开机正常启动成功</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996e250de218774.png_e1080.jpg" alt="iStoreOS顺利启动完成，按回车键"></p><p>iStoreOS顺利启动完成，按回车键</p><h2 id="修改IP"><a href="#修改IP" class="headerlink" title="修改IP"></a>修改IP</h2><p>启动完后默认这台软路由IP是192.168段的，我的内网是10.0.0.的需要改一下</p><p><code>输入 quickstart</code></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996fb0899fb8290.png_e1080.jpg" alt="进入设定初始化"></p><p>选择1修改需要的IP，记得在主路由DHCP分配固定IP给iStoreOS虚拟机</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63997096719b28648.png_e1080.jpg" alt="设定成合适自己内网的IP"></p><p>设定成合适自己内网的IP</p><p>如果安装的是旧版iStore，输入quickstart修改IP选单会如下。 </p><p>要求输入root密码的话，预设是password</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63996efe371c02877.png_e1080.jpg" alt="这是旧版安装完画面"></p><h2 id="改好IP后，就可以进入网页界面"><a href="#改好IP后，就可以进入网页界面" class="headerlink" title="改好IP后，就可以进入网页界面"></a>改好IP后，就可以进入网页界面</h2><p>浏览器输入刚设定的IP</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/6399721280dec9099.png_e1080.jpg" alt="预设密码password，记得后面修改下"></p><p>预设密码password，记得后面修改下</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c787abb59571.png_e1080.jpg" alt="登入后主界面面板"></p><p>登入后主界面面板</p><p>进入后首页是显示网络流量等基本讯息的仪表盘，左边是主功能菜单，基本跟Openwrt的差不多。</p><p>但可以在主菜单里发现有个<strong>网络向导</strong>，点进入有三种向导，对新手很方便地可以实现想要的功能，</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c78551da4615.png_e1080.jpg" alt="比起传统Openwrt多了向导"></p><p>比起传统Openwrt多了向导</p><p>我选的是旁路由，基本输入几个值后一步到位</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c78ed7527767.png_e1080.jpg" alt="输入旁路由IP等"></p><p>输入旁路由IP等</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/63995c78f192732.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><h2 id="iStore插件商店"><a href="#iStore插件商店" class="headerlink" title="iStore插件商店"></a>iStore插件商店</h2><p>同样跟向导一样适合新手的特色功能就是iStore了，里面提供了很多使用的插件，不需要自行去外部下载再安装，只需要点击就可以下载安装完成。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639977ad81b47399.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639977cae343e6389.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639977d8c5b482429.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639977e43facf1936.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639977f4631455628.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><h2 id="手动安装插件部分"><a href="#手动安装插件部分" class="headerlink" title="手动安装插件部分"></a>手动安装插件部分</h2><p>有些额外不可描述插件商店里就没有提供需要另外下载。需要的值友可以搜查关键字are u ok</p><p>我这里下载了adguardhome去广告插件</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/639978562b3275129.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/6399785fd309d1777.png_e1080.jpg" alt="安装完成后右上显示为绿色表示成功安装完成"></p><p>安装完成后右上显示为绿色表示成功安装完成</p><p>大致简单介绍了一下特色功能的部分，其他功能跟openwrt都差不多，值友们可以自行安装后研究，</p><p>最后别忘了更改root密码</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/6399796ec9f0f4870.png_e1080.jpg" alt="PVE安装iStore手把手图文教程"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>iStoreOS除了提供Openwrt的功能外，还内置了方便新手的向导跟插件功能，也是梅林固件受欢迎的功能之一，相信开发团队会继续推出更完善优化的版本造福我这样的小白玩家。</p><p>后面我会再实操去广告插件功能及效果，喜欢的值友可以关注下，谢谢</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软路由 </tag>
            
            <tag> pve </tag>
            
            <tag> istoreos </tag>
            
            <tag> all in one </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始安装CasaOS保姆级教程</title>
      <link href="/articles/casaos/"/>
      <url>/articles/casaos/</url>
      
        <content type="html"><![CDATA[<h1 id="从零开始安装CasaOS保姆级教程"><a href="#从零开始安装CasaOS保姆级教程" class="headerlink" title="从零开始安装CasaOS保姆级教程"></a>从零开始安装CasaOS保姆级教程</h1><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/casaos_logo_hd.svg" alt="Home | CasaOS Wiki"></p><h2 id="1-Debian基础安装"><a href="#1-Debian基础安装" class="headerlink" title="1.Debian基础安装"></a><strong>1.Debian基础安装</strong></h2><p>原文出自<a href="https://post.smzdm.com/p/a607edoe/pic_3/"><strong>NAS&#x2F;Docker折腾系列 篇二：从零开始安装CasaOS保姆级教程</strong></a>，作者只是在原文基础上踩坑的地方补充添加了点自己的想法以完善此教程。本站为个人博客站点，此文仅做为安装记录备用。如果侵权请联系本站下架！</p><p>​      本次折腾的小主机&#x2F;虚拟机都是x86架构的，基于易用性、稳定性等考虑，我选择了<em>Debian 12 x64</em>作为宿主系统。为了避免因网络问题造成的安装缓慢和失败，建议下载<a href="https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/">完整安装iso</a>。</p><p>使用<a href="https://www.ventoy.net/cn/index.html">Ventoy工具</a>或你喜欢的其他方式引导到iso，我们就来到了安装界面**↓**：</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/1.jpg" alt="1.jpg"></p><p>接下来就是我绕的第一个远路：先安装英文系统，避免由于<em>安装不完全</em>导致的<strong>中文乱码</strong>现象。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2.jpg" alt="2.jpg"></p><p>选择English&#x2F;English，回车后依次选择other-Asia-China，接着在Configure Locales界面连续回车，直到进入**↓**网络配置步骤，填写自己想要的主机名（即这台设备在网络上显示的名字)：</p><p><img src="https://www.inte8.top/upload/3.jpg" alt="3.jpg"></p><p>接下来就是重点项目——<strong>root根密码</strong>的设定，重复输入两次即可完成。</p><p>注意！！在这里<strong>强烈建议</strong>设定一个复杂但记得住的root密码，在日常使用中则采用<em>普通用户+SU提权</em>的方式，实现安全隔离。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/4.jpg" alt="4.jpg"></p><p>接下来就是设置<em>首个普通用户</em>的全称和用户名，在设定了root密码的情况下，系统会禁用root用户的创建和登录，这个普通用户就是你登录主机的方式。因为是演示，我设定了temp作为首个普通用户的名称**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/5.webp"></p><p>以及temp用户的密码**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/6.webp"></p><p>接着就是给系统<a href="https://www.smzdm.com/fenlei/yingpan/">硬盘</a>分区，我的选择是将整块硬盘分给Debian使用**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/7.webp" alt="7.webp"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/8.png" alt="8.png"></p><p>同时将所有文件放在同一分区**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/9.webp" alt="9.webp"></p><p>安装程序自动分区后，勾选确认并继续**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/10.webp" alt="10.webp"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/11.jpg" alt="11.jpg"></p><p>经过一段时间读条后，Debian的安装来到第二阶段**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/12.jpg" alt="12.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/13.webp" alt="13.webp"></p><p>这两步都是apt包管理器的选项，分别询问是否使用额外的安装媒体或者网络源，为了避免网络环境带来的缓慢甚至失败，这里我第二次绕路：全部选否，等系统正式安装完毕后再进行更新</p><p>接下来就到了软件包组件选择，其中前面带有*…<em>标识的是不同的桌面环境，也就是图形界面，因为CasaOS本身就是图形管理页面，为了避免不必要的系统开销，我选择不安装桌面环境（就是Debian自己的图形管理界面）**↓*</em></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/14.webp">经过另一轮读条后，Debian 12安装完毕，按提示重启后进入命令行界面**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023109431.png" alt="image-20240515023109431"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023145724.png" alt="image-20240515023145724"></p><h2 id="2-Debian进阶设置"><a href="#2-Debian进阶设置" class="headerlink" title="2.Debian进阶设置"></a><strong>2.Debian进阶设置</strong></h2><p>原文出处从这里开始不太一样，我自己稍作修改并记录一下。等到debian12安装完毕后，先不要移除引导设备（默认的完整版dian12DVD软件源都是从引导设备安装）。首先先在本机上登录普通用户或者root用户，安装文本编辑工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"><span class="comment">#回车后输入你的root密码</span></span><br><span class="line"><span class="built_in">sudo</span> apt install nano curl <span class="built_in">sudo</span></span><br><span class="line"><span class="built_in">sudo</span> nano /etc/network/interfaces</span><br><span class="line"><span class="comment">#iface ens18 inet dhcp  </span></span><br><span class="line"><span class="comment">#注释掉iface开头这一行并记录网卡名字或者直接把dhcp改为static也行</span></span><br><span class="line">iface ens18 inet static</span><br><span class="line">address 172.16.254.250</span><br><span class="line">netmask 255.255.0.0</span><br><span class="line">gateway 172.16.254.254</span><br><span class="line"><span class="comment">#以上三项对应IP 子网掩码 网关</span></span><br><span class="line">iface ens18 inet6 auto</span><br><span class="line"><span class="comment">#倘若需要开启Ipv6自行加入此行</span></span><br></pre></td></tr></table></figure><p>修改完以后按ctrl+x保存 先按Y 再回车就可以了</p><p>更改软件源，不管你是国内还是境外理论上只要是完整包debian12安装的都需要更改软件源。因为原来的根本就更新不了软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>腾云源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tencent.com/debian/ bookworm main non-free non-free-firmware contrib</span><br><span class="line">deb-src https://mirrors.tencent.com/debian/ bookworm main non-free non-free-firmware contrib</span><br><span class="line">deb https://mirrors.tencent.com/debian-security/ bookworm-security main</span><br><span class="line">deb-src https://mirrors.tencent.com/debian-security/ bookworm-security main</span><br><span class="line">deb https://mirrors.tencent.com/debian/ bookworm-updates main non-free non-free-firmware contrib</span><br><span class="line">deb-src https://mirrors.tencent.com/debian/ bookworm-updates main non-free non-free-firmware contrib</span><br><span class="line">deb https://mirrors.tencent.com/debian-backports/ bookworm-backports main non-free non-free-firmware contrib</span><br><span class="line">deb-src https://mirrors.tencent.com/debian-backports/ bookworm-backports main non-free non-free-firmware contrib</span><br></pre></td></tr></table></figure><p>debian官方源（软件较新，但是国内环境更新贼慢）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://deb.debian.org/debian bookworm main non-free non-free-firmware contrib</span><br><span class="line">deb http://deb.debian.org/debian bookworm-updates main non-free non-free-firmware contrib</span><br><span class="line">deb http://deb.debian.org/debian bookworm-proposed-updates main non-free non-free-firmware contrib</span><br><span class="line">deb http://deb.debian.org/debian bookworm-backports main non-free non-free-firmware contrib</span><br><span class="line">deb http://deb.debian.org/debian bookworm-backports-sloppy main non-free non-free-firmware contrib</span><br><span class="line">deb-src http://deb.debian.org/debian bookworm main non-free non-free-firmware contrib</span><br><span class="line">deb-src http://deb.debian.org/debian bookworm-updates main non-free non-free-firmware contrib</span><br><span class="line">deb-src http://deb.debian.org/debian bookworm-proposed-updates main non-free non-free-firmware contrib</span><br><span class="line">deb-src http://deb.debian.org/debian bookworm-backports main non-free non-free-firmware contrib</span><br><span class="line">deb-src http://deb.debian.org/debian bookworm-backports-sloppy main non-free non-free-firmware contrib</span><br></pre></td></tr></table></figure><p>根据自己情况修改适当的自己的软件源，完事ctrl+x保存。之后依次执行如下代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt -y upgrade</span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><p>重启之后先在本机登录查看一下IP地址是否更改成功，查看命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip add show</span><br></pre></td></tr></table></figure><p>成功以后就可以用你自己喜欢的shell工具登录了，因为我们没有修改opensshserver.所以只能用普通用户登录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"><span class="comment">#先给普通用户提权，回车以后提示输入密码。这个密码为root用户密码</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target</span><br><span class="line"><span class="comment">#禁用debian系统休眠</span></span><br><span class="line">systemctl status sleep.target</span><br><span class="line"><span class="comment">#查看是否关闭成功</span></span><br></pre></td></tr></table></figure><p>关闭成功后会有如下提示</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023243065.png" alt="image-20240515023243065"></p><p>接着我们来将Debian的系统语言改为中文，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>来打开本地化配置功能，原文建议“找到<em>en_US.UTF-8 UTF-8</em>后用空格键取消星号勾选，再拉到列表末端选中<em>zh_CN.UTF-8 UTF-8</em>，”实际操作不取消<em>en_US.UTF-8 UTF-8</em>勾选也不影响下面步骤，回车后选中<strong>zh_CN.UTF-8</strong>，回车并等待执行**↓**</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023305231.png" alt="3-jqfz.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023342336.png" alt="image-20240515023342336"></p><p>中文配置完毕后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><h2 id="3-CasaOS的一键化安装"><a href="#3-CasaOS的一键化安装" class="headerlink" title="3.CasaOS的一键化安装"></a><strong>3.CasaOS的一键化安装</strong></h2><p>得益于<a href="https://github.com/IceWhaleTech/CasaOS">作者</a>的辛勤劳作，CasaOS的安装可谓是一键式傻瓜化脚本，根据<a href="https://casaos.io/">官网</a>的提示，我们只需要<em>su提权</em>后，执行一行命令就可以开始了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.casaos.io | <span class="built_in">sudo</span> bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023431741.png" alt="image-20240515023431741"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023454172.png" alt="image-20240515023454172"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023514702.png" alt="image-20240515023514702"></p><p>在casaOS安装完毕后，我们还有一个可选项：开启docker的IPv6功能，可以参考什么值得买站内大佬文章链接：<a href="https://post.smzdm.com/p/am82870d/">https://post.smzdm.com/p/am82870d/</a></p><p>在Debian系统本身获得了v6地址的前提下，我们执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>后，贴入命令并保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">&quot;ipv6&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;fixed-cidr-v6&quot;</span>: <span class="string">&quot;fe80::/64&quot;</span>, <span class="string">&quot;experimental&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;ip6tables&quot;</span>: <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure><p>最后执行一遍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service docker restart</span><br></pre></td></tr></table></figure><p>重启docker网络，让刚刚修改的配置生效。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023549105.png" alt="image-20240515023549105"></p><p>最后的最后，关掉PowerShell窗口，在浏览器输入小主机的IP地址，欢迎来到CasaOS带来的Docker<img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/image-20240515023602699.png" alt="image-20240515023602699"></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nas </tag>
            
            <tag> casaos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>routeros 7.X IPV6设置</title>
      <link href="/articles/routeros7use/"/>
      <url>/articles/routeros7use/</url>
      
        <content type="html"><![CDATA[<h2 id="routeros-7-X-IPV6设置"><a href="#routeros-7-X-IPV6设置" class="headerlink" title="routeros 7.X IPV6设置"></a>routeros 7.X IPV6设置</h2><h5 id="1-再确保routeos正常上网后，设置dhcpv6client。用winbox打开ipv6-dhcpv6client，pool-name值可以写任意自己熟悉的。"><a href="#1-再确保routeos正常上网后，设置dhcpv6client。用winbox打开ipv6-dhcpv6client，pool-name值可以写任意自己熟悉的。" class="headerlink" title="1.再确保routeos正常上网后，设置dhcpv6client。用winbox打开ipv6&gt;dhcpv6client，pool name值可以写任意自己熟悉的。"></a>1.再确保routeos正常上网后，设置dhcpv6client。用winbox打开ipv6&gt;dhcpv6client，pool name值可以写任意自己熟悉的。</h5><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/d1ff0caaec78de79120cd7b4d3ccd475-image-20240520031336215-5adcbd.png" alt="image-20240520031336215"></p><h5 id="2-给内网网卡设置ipv6地址"><a href="#2-给内网网卡设置ipv6地址" class="headerlink" title="2.给内网网卡设置ipv6地址"></a>2.给内网网卡设置ipv6地址</h5><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/aa715ad4aad6cf18adc31a744327101a-image-20240520031722408-603ac9.png" alt="image-20240520031722408"></p><h5 id="3-设置内网ipv6地址分配，打开ipv6-dhchv6-server。具体设置参照下图"><a href="#3-设置内网ipv6地址分配，打开ipv6-dhchv6-server。具体设置参照下图" class="headerlink" title="3.设置内网ipv6地址分配，打开ipv6&gt;dhchv6 server。具体设置参照下图"></a>3.设置内网ipv6地址分配，打开ipv6&gt;dhchv6 server。具体设置参照下图</h5><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/5ac14c3551e9e4801d7e0f81706fca8f-image-20240520031903900-963211.png" alt="image-20240520031903900"></p><h5 id="4-设置ND，打开ipv6-neighbor-discovery"><a href="#4-设置ND，打开ipv6-neighbor-discovery" class="headerlink" title="4.设置ND，打开ipv6&gt;neighbor discovery"></a>4.设置ND，打开ipv6&gt;neighbor discovery</h5><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/449f6d8ff8f6413603dcf11404f7f073-image-20240520032616623-89b02b.png" alt="image-20240520032616623"></p><h5 id="5-这时候实际上已经可以上网了，但是打开IPV6网页的时候特别慢。我们需要添加一条防火墙规则改变一下MSS，打开ipv6-ipv6-firewall-再mangle下新建一条规则"><a href="#5-这时候实际上已经可以上网了，但是打开IPV6网页的时候特别慢。我们需要添加一条防火墙规则改变一下MSS，打开ipv6-ipv6-firewall-再mangle下新建一条规则" class="headerlink" title="5.这时候实际上已经可以上网了，但是打开IPV6网页的时候特别慢。我们需要添加一条防火墙规则改变一下MSS，打开ipv6&gt;ipv6 firewall 再mangle下新建一条规则"></a>5.这时候实际上已经可以上网了，但是打开IPV6网页的时候特别慢。我们需要添加一条防火墙规则改变一下MSS，打开ipv6&gt;ipv6 firewall 再mangle下新建一条规则</h5><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/2843be459341759ac68c99cd8eb8887b-image-20240520032758913-8131d6.png" alt="image-20240520032758913"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/80b16f4c954f673a951372ddcde8f6b7-image-20240520032809483-6eb283.png" alt="image-20240520032809483"></p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/20/cbb078bc804999ddc553d92033964b44-image-20240520032820373-0d243b.png" alt="image-20240520032820373"></p><h5 id="完结，至此可以愉快的进行上网了。"><a href="#完结，至此可以愉快的进行上网了。" class="headerlink" title="完结，至此可以愉快的进行上网了。"></a>完结，至此可以愉快的进行上网了。</h5>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软路由 </tag>
            
            <tag> routeros </tag>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora + PicGo-Core + Github 实现图片上传到Github</title>
      <link href="/articles/typora-picgo-core/"/>
      <url>/articles/typora-picgo-core/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora-PicGo-Core-Github-实现图片上传到Github"><a href="#Typora-PicGo-Core-Github-实现图片上传到Github" class="headerlink" title="Typora + PicGo-Core + Github 实现图片上传到Github"></a>Typora + PicGo-Core + Github 实现图片上传到Github</h1><h2 id="下载PicGo-Core"><a href="#下载PicGo-Core" class="headerlink" title="下载PicGo-Core"></a>下载PicGo-Core</h2><p>由于我的电脑有<code>nodejs</code>环境，所以我使用的是<code>npm</code>命令安装<code>picgo</code>, 命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install picgo -g</span><br></pre></td></tr></table></figure><p>安装完成后，检查命令行输出, 记录下红色框内的路径。</p><p><a href="https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest/blog-images/image-20201105201730919.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/15/e6298d432fc318cd2de3f9b741d73dee-image-20201105201730919-3dc062.png" alt="img"></a></p><p>输入命令查看版本，如果有输出则添加成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo -``v</span><br></pre></td></tr></table></figure><h2 id="安装github-plus"><a href="#安装github-plus" class="headerlink" title="安装github-plus"></a>安装github-plus</h2><p>官方提供的github上传图库不好用，安装一款新的上传插件<code>github-plus</code>, 命令行执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo install github-plus</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest/blog-images/image-20201105223054898.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/15/dba85b9fb03c7c2ce576ba97dcbaf1a8-image-20201105223054898-a8d7a4.png" alt="img"></a></p><p>安装成功后会有提示。</p><h2 id="Typora图像设置"><a href="#Typora图像设置" class="headerlink" title="Typora图像设置"></a>Typora图像设置</h2><p>在<code>Typora</code>中配置图像上传信息。</p><h3 id="设置PicGo的配置信息"><a href="#设置PicGo的配置信息" class="headerlink" title="设置PicGo的配置信息"></a>设置PicGo的配置信息</h3><p><a href="https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest/blog-images/image-20201105223720354.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/15/7a48bd7fb3fe1888cce9d8ac1ad583a8-image-20201105223720354-868070.png" alt="img"></a></p><p>如上图所示，分为2个步骤：</p><ol><li><p><strong>上传服务</strong>选择<code>PicGo-Core(command line)</code></p></li><li><p>打开配置文件，在打开的配置文件，添加相关信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;picBed&quot;: &#123;</span><br><span class="line">   &quot;uploader&quot;: &quot;githubPlus&quot;,</span><br><span class="line">   &quot;current&quot;: &quot;githubPlus&quot;,</span><br><span class="line">   &quot;githubPlus&quot;: &#123;</span><br><span class="line">     &quot;branch&quot;: &quot;master&quot;,// 仓库分支</span><br><span class="line">     &quot;customUrl&quot;: &quot;https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest&quot;, // 访问的自定义url</span><br><span class="line">     &quot;origin&quot;: &quot;github&quot;, // 存放的图片类型</span><br><span class="line">     &quot;repo&quot;: &quot;jxiaow/cdn-images&quot;, // 存放图片的仓库</span><br><span class="line">     &quot;path&quot;: &quot;blog-images&quot;,// 存放图片的仓库目录下的文件夹</span><br><span class="line">     &quot;token&quot;: &quot;&quot; // 访问github的仓库的token, 不知道怎么设置的自行百度</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> &quot;picgoPlugins&quot;: &#123;</span><br><span class="line">   &quot;picgo-plugin-github-plus&quot;: true // 启用github-plus插件</span><br><span class="line"> &#125;,</span><br><span class="line"> &quot;picgo-plugin-github-plus&quot;: &#123;</span><br><span class="line">   &quot;lastSync&quot;: &quot;2020-11-05 07:54:47&quot;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试配置"><a href="#测试配置" class="headerlink" title="测试配置"></a>测试配置</h3><p>根据上述配置完毕后我们需要进行测试链接是否成功，在测试之前还要进行如图所示的修改：<br><a href="https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest/blog-images/image-20201105224420441.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/15/cc200be8704e802b2e1d3dfc8f05064c-image-20201105224420441-30183d.png" alt="img"></a></p></li><li><p><strong>上传服务</strong>修改为<code>Custom Command</code></p></li><li><p>自定义命令 ： <code>picgo upload</code></p></li><li><p>点击验证图片上传选项</p></li><li><p>如果显示验证成功，则表示配置完成。</p></li></ol><p><a href="https://cdn.jsdelivr.net/gh/jxiaow/cdn-images@latest/blog-images/image-20201105225415181.png"><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/2024/05/15/2a5c7d4e49ceff95bbf86687bc4ca86d-image-20201105225415181-9a13e3.png" alt="img"></a></p><h2 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h2><p>将图片拖入Typora中，然后在图片单击右键，图片上传即可。</p><h2 id="安装文件重命名插件-picgo-plugin-rename-file"><a href="#安装文件重命名插件-picgo-plugin-rename-file" class="headerlink" title="安装文件重命名插件 picgo-plugin-rename-file"></a>安装文件重命名插件 <a href="https://github.com/liuwave/picgo-plugin-rename-file">picgo-plugin-rename-file</a></h2><p><code>picgo-plugin-rename-file</code> 插件可以帮我们安装一定的规则将文件进行重命名，具体设置请看github。</p><p>输入一下命令安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo install rename-file</span><br></pre></td></tr></table></figure><p>安装完成后，打开<code>picgo</code>的配置文件<code>C:\Users\xxx\.picgo\config.json</code>末尾最后一个大括号前添加一下信息即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">,</span><br><span class="line">&quot;picgo-plugin-rename-file&quot;: &#123;</span><br><span class="line">    &quot;format&quot;: &quot;&#123;y&#125;/&#123;m&#125;/&#123;d&#125;/&#123;hash&#125;-&#123;origin&#125;-&#123;rand:6&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加水印"><a href="#添加水印" class="headerlink" title="添加水印"></a>添加水印</h2><p>*<strong>注意：此插件目前会导致文件上传重命名插件不生效*</strong></p><p>插件地址: <a href="https://github.com/Dec-F/picgo-plugin-watermark">picgo-plugin-watermark</a> ，<code>watermark</code>插件可以帮我们在上传图片的时候添加水印。</p><p>安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo install watermark</span><br></pre></td></tr></table></figure><p>安装成功后，<code>C:\Users\xxx\.picgo\config.json</code>末尾最后一个大括号前添加一下信息即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">,</span><br><span class="line">&quot;picgo-plugin-watermark&quot;: &#123; // 以下配置信息参考插件地址说明</span><br><span class="line">    &quot;text&quot;: &quot;jxiaow&quot;, // 水印名称</span><br><span class="line">    &quot;fontSize&quot;: 18, // 水印字体大小</span><br><span class="line">    &quot;position&quot;:&quot;rm&quot; // 水印位置</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>**注意：**由于这个插件安装过程中需要下载字体，会导致下载特别慢，尽可能使用代理。</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typora </tag>
            
            <tag> 文本编辑 </tag>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS安装爱快</title>
      <link href="/articles/vpsikuai/"/>
      <url>/articles/vpsikuai/</url>
      
        <content type="html"><![CDATA[<h3 id="VPS安装爱快"><a href="#VPS安装爱快" class="headerlink" title="VPS安装爱快"></a>VPS安装爱快</h3><h6 id="步骤1-下载爱快ISO并重命名为ikuai8-iso"><a href="#步骤1-下载爱快ISO并重命名为ikuai8-iso" class="headerlink" title="步骤1:下载爱快ISO并重命名为ikuai8.iso"></a>步骤1:下载爱快ISO并重命名为ikuai8.iso</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x32_3.7.11_Build202403051040.iso -O ikuai8.iso</span><br></pre></td></tr></table></figure><h6 id="步骤2-挂载ISO镜像"><a href="#步骤2-挂载ISO镜像" class="headerlink" title="步骤2: 挂载ISO镜像"></a>步骤2: 挂载ISO镜像</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount ikuai8.iso /mnt</span><br></pre></td></tr></table></figure><h6 id="步骤3-复制ISO镜像启动文件"><a href="#步骤3-复制ISO镜像启动文件" class="headerlink" title="步骤3: 复制ISO镜像启动文件"></a>步骤3: 复制ISO镜像启动文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -rpf /mnt/boot /</span><br></pre></td></tr></table></figure><h6 id="步骤4-重启"><a href="#步骤4-重启" class="headerlink" title="步骤4: 重启"></a>步骤4: 重启</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h6 id="步骤5-在腾讯云-阿里云的操作页面打开VNC界面-登录-远程登录-–-VNC登录，正常ISO安装爱快系统"><a href="#步骤5-在腾讯云-阿里云的操作页面打开VNC界面-登录-远程登录-–-VNC登录，正常ISO安装爱快系统" class="headerlink" title="步骤5: 在腾讯云&#x2F;阿里云的操作页面打开VNC界面: 登录&#x2F;远程登录 –&gt; VNC登录，正常ISO安装爱快系统"></a>步骤5: 在腾讯云&#x2F;阿里云的操作页面打开VNC界面: 登录&#x2F;远程登录 –&gt; VNC登录，正常ISO安装爱快系统</h6><h6 id="步骤6-进入控制台”开启外网访问WEB”"><a href="#步骤6-进入控制台”开启外网访问WEB”" class="headerlink" title="步骤6: 进入控制台”开启外网访问WEB”"></a>步骤6: 进入控制台”开启外网访问WEB”</h6><p>o、其他选项 –&gt; 2、开启外网访问web</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱快 </tag>
            
            <tag> 软路由 </tag>
            
            <tag> vps </tag>
            
            <tag> ikuai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS 安装 ros 系统</title>
      <link href="/articles/vpsros/"/>
      <url>/articles/vpsros/</url>
      
        <content type="html"><![CDATA[<h3 id="VPS-安装-ros-系统"><a href="#VPS-安装-ros-系统" class="headerlink" title="VPS 安装 ros 系统"></a>VPS 安装 ros 系统</h3><p>VPS预装一个centos7系统，安装wget命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure><p>通用单网卡方案 (适应于绝大多数VPS)</p><p>下载镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.mikrotik.com/routeros/6.45.8/chr-6.45.8.img.zip -O chr.img.zip</span><br></pre></td></tr></table></figure><p>解压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip -c chr.img.zip &gt; chr.img</span><br></pre></td></tr></table></figure><p>挂载镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk -lu chr.img  #查看img得start值</span><br><span class="line">mount -o loop,offset=512 chr.img /mnt</span><br><span class="line">mount -o loop,offset=17408 chr.img /mnt</span><br></pre></td></tr></table></figure><p>获取地址与网关 与 赋入变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig  #查看网卡名字</span><br><span class="line">ADDR0=`ip addr show eth0 | grep global | cut -d&#x27; &#x27; -f 6 | head -n 1`</span><br><span class="line">GATE0=`ip route list | grep default | cut -d&#x27; &#x27; -f 3`</span><br></pre></td></tr></table></figure><p>新建mnt目录下rw文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/rw</span><br></pre></td></tr></table></figure><p>把变量ADDR0和GATE0写入到&#x2F;mnt&#x2F;rw&#x2F;autorun.scr文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/ip address add address=$ADDR0 interface=[/interface ethernet find where name=ether1]</span><br><span class="line">/ip route add gateway=$GATE0</span><br><span class="line">&quot; &gt; /mnt/rw/autorun.scr</span><br></pre></td></tr></table></figure><p>卸载镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br></pre></td></tr></table></figure><p>立即重新挂载所有的文件系统为只读</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo u &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure><p>DD ros镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk -lu  #查看磁盘名字</span><br><span class="line">dd if=chr.img bs=1024 of=/dev/sda &amp;&amp; reboot</span><br><span class="line">dd if=chr.img bs=1024 of=/dev/vda &amp;&amp; reboot</span><br></pre></td></tr></table></figure><p>立即重新启动机器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;b&quot; &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure><p>另一款 双网卡的样本(注意分清 内外 网卡)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">196.10.68.0/24 dev eth0  proto kernel  scope link  src 196.10.68.24 </span><br><span class="line">169.254.0.0/16 dev eth0  scope link  metric 1002 </span><br><span class="line">169.254.0.0/16 dev eth1  scope link  metric 1003 </span><br><span class="line">10.0.0.0/8 dev eth1  proto kernel  scope link  src 10.0.87.152 </span><br><span class="line">default via 196.10.68.1 dev eth0</span><br></pre></td></tr></table></figure><p>下载roschr镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.mikrotik.com/routeros/6.45.8/chr-6.45.8.img.zip -O chr.img.zip</span><br></pre></td></tr></table></figure><p>解压镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip -c chr.img.zip &gt; chr.img</span><br></pre></td></tr></table></figure><p>挂载镜像到&#x2F;mnt目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop,offset=512 chr.img /mnt</span><br></pre></td></tr></table></figure><p>获取本机IP和网关信息并赋予变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ADDR0=`ip addr show eth0 | grep global | cut -d&#x27; &#x27; -f 6 | head -n 1`</span><br><span class="line">ADDR1=`ip addr show eth1 | grep global | cut -d&#x27; &#x27; -f 6 | head -n 1`</span><br><span class="line">GATE0=`ip route list | grep default | cut -d&#x27; &#x27; -f 3`</span><br><span class="line">GATE1=`ip route list | grep &#x27;10.0.0.0/8&#x27; | cut -d&#x27; &#x27; -f 9`</span><br></pre></td></tr></table></figure><p>给mnt目录新建rw文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/rw</span><br></pre></td></tr></table></figure><p>把刚才获取的变量信息写入到&#x2F;mnt&#x2F;rw&#x2F;autorun.scr文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/ip address add address=$ADDR0 interface=[/interface ethernet find where name=ether1]</span><br><span class="line">/ip address add address=$ADDR1 interface=[/interface ethernet find where name=ether2]</span><br><span class="line">/ip route add gateway=$GATE0</span><br><span class="line">/ip route add dst-address=10.0.0.0/8 gateway=$GATE1</span><br><span class="line">&quot; &gt; /mnt/rw/autorun.scr</span><br></pre></td></tr></table></figure><p>卸载镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br></pre></td></tr></table></figure><p>立即重新挂载所有的文件系统为只读</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo u &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure><p>DD ros镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=chr.img bs=1024 of=/dev/vda &amp;&amp; reboot</span><br></pre></td></tr></table></figure><p>Ros 授权相关</p><p>Ros 系统是商业软件 ，本身是需要授权的，在没有授权的情况下使用，网卡限制速率(1Mbps)，不过Ros CHR版本是支持免费试用的，只需要去官方网站 <a href="https://mikrotik.com/client">https://mikrotik.com/client</a> 注册一个帐号，然后去邮箱获取帐号通过验证，接着返回到Ros系统  进入 System &gt; License  填入你刚刚注册的帐号登录即可，试用期是两个月时长，但根据我的使用情况来看，只要系统不进行更新，是可以一直免费试用下去的，功能不受限制。</p><p>pve 安装roschr </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk 104 /var/lib/vz/template/iso/chr-7.14.3.img local-lvm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软路由 </tag>
            
            <tag> ros </tag>
            
            <tag> vps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Truenas scale 虚拟机安装istoreos</title>
      <link href="/articles/truenas/"/>
      <url>/articles/truenas/</url>
      
        <content type="html"><![CDATA[<h1 id="Truenas-scale-虚拟机安装istoreos"><a href="#Truenas-scale-虚拟机安装istoreos" class="headerlink" title="Truenas scale 虚拟机安装istoreos"></a>Truenas scale 虚拟机安装istoreos</h1><ol><li><p>先去 iStoreOS 官网下载 img.gz 格式的包（推荐 x86 efi ），解压得到 img 文件 istoreos.img 。然后将文件上传到 NAS ，我是上传到 <code>/mnt/pool4/personal</code>。</p></li><li><p>在 TrueNAS 网页 <strong>Datasets</strong> 页面内 <strong>Add Zvol</strong> ，名字自取，大小 5GiB 就够了。(我在 pool4 下创建了名为 istoreos 的 zvol）</p></li><li><p>进入 TrueNAS Shell ，执行 <code>ls /dev/zvol/[zvol 所在存储池]</code> ，（比如我的是：<code>ls /dev/zvol/pool4</code>）可以看到刚才创建的名为 istoreos 的 zvol ，那么我的 zvol 路径就是 <code>/dev/zvol/pool4/istoreos</code> 。</p></li><li><p>执行 <code>dd if=[img文件路径] of=[zvol路径] bs=1M</code> ，（比如我的是：<code>dd if=/mnt/pool4/personal/istoreos.img of=/dev/zvol/pool4/istoreos bs=1M</code> ）</p></li><li><p>最后安装虚拟机的时候磁盘选择这个 zvol 就行了。</p></li><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/mnt/share/openwrt/istoreos.img of=/dev/zvol/share/openwrt/isdisk bs=1M</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --restart=always -p 6080:80 -e HTTP_PASSWORD=mypassword -v /root/data/docker_data/Ubuntu_desktop/dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> truenas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Multipass 使用笔记</title>
      <link href="/articles/multipasshelp/"/>
      <url>/articles/multipasshelp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>[!IMPORTANT]</p><p>本文出自悟空的日常抄录，未做任何修改仅用来存根记录。</p><p>原文链接：<a href="https://wkdaily.cpolar.cn/archives/multipass">https://wkdaily.cpolar.cn/archives/multipass</a></p></blockquote><h1 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h1><h2 id="查看支持的系统镜像列表"><a href="#查看支持的系统镜像列表" class="headerlink" title="查看支持的系统镜像列表"></a>查看支持的系统镜像列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass find</span><br></pre></td></tr></table></figure><h2 id="❤️-新建和运行-ubuntu"><a href="#❤️-新建和运行-ubuntu" class="headerlink" title="❤️ 新建和运行 ubuntu"></a>❤️ 新建和运行 ubuntu</h2><blockquote><p>[!NOTE]</p><p>multipass launch –name &lt;虚拟机实例名称&gt; &lt;系统镜像名称(可选)&gt;</p><p>举例，比如创建一个名为 vm1 的虚拟机实例，不写系统镜像这个参数，则表示最新版ubuntu 24.04</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass launch --name vm1</span><br></pre></td></tr></table></figure><h2 id="以后如何调用虚拟机？"><a href="#以后如何调用虚拟机？" class="headerlink" title="以后如何调用虚拟机？"></a>以后如何调用虚拟机？</h2><ul><li>方法一 任务栏图标点击右键——Open Shell</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/%E5%8F%B3%E9%94%AE%E8%B0%83%E7%94%A8.jpg" alt="img"></p><ul><li>方法二 运行指定虚拟机实例名称即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass shell vm1</span><br></pre></td></tr></table></figure><h2 id="如何换-国内-软件源-比如阿里云-Ubuntu-24-04-为例"><a href="#如何换-国内-软件源-比如阿里云-Ubuntu-24-04-为例" class="headerlink" title="如何换 国内 软件源 比如阿里云 Ubuntu 24.04 为例"></a>如何换 国内 软件源 比如阿里云 Ubuntu 24.04 为例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s|http://archive.ubuntu.com/|http://mirrors.aliyun.com/|g&#x27;</span> /etc/apt/sources.list.d/ubuntu.sources</span><br></pre></td></tr></table></figure><p>或者手动修改 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/apt/sources.list.d/ubuntu.sources</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/sf.jpg" alt="img"></p><h2 id="然后更新软件源"><a href="#然后更新软件源" class="headerlink" title="然后更新软件源"></a>然后更新软件源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -i</span><br><span class="line">apt update -y</span><br><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure><h2 id="如何删除虚拟机实例（分三步）"><a href="#如何删除虚拟机实例（分三步）" class="headerlink" title="如何删除虚拟机实例（分三步）"></a>如何删除虚拟机实例（分三步）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止 vm1</span></span><br><span class="line"></span><br><span class="line">multipass stop vm1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 vm1</span></span><br><span class="line"></span><br><span class="line">multipass delete vm1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理回收</span></span><br><span class="line"></span><br><span class="line">multipass purge</span><br><span class="line"></span><br><span class="line"><span class="comment"># 附加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止全部虚拟机</span></span><br><span class="line"></span><br><span class="line">multipass stop --all</span><br></pre></td></tr></table></figure><h2 id="查看虚拟机列表"><a href="#查看虚拟机列表" class="headerlink" title="查看虚拟机列表"></a>查看虚拟机列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看虚拟机列表 包括其状态（正在运行、已经删除的、已经停止的、标记未知状态的）</span></span><br><span class="line"></span><br><span class="line">multipass list</span><br></pre></td></tr></table></figure><h1 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h1><h2 id="新建-4核心-4GB内存-300G虚拟磁盘的ubuntu-实例"><a href="#新建-4核心-4GB内存-300G虚拟磁盘的ubuntu-实例" class="headerlink" title="新建 4核心 4GB内存 300G虚拟磁盘的ubuntu 实例"></a>新建 4核心 4GB内存 300G虚拟磁盘的ubuntu 实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass launch --name vm3 -c 4 -m 4G -d 300G</span><br></pre></td></tr></table></figure><blockquote><p>[!NOTE]</p><p>vm3 虚拟机名称</p><p>-c 4 代表虚拟4核心 这个要根据实际CPU核心数确定 不能随便写 比如本身2核心的cpu是无法虚拟4核心的</p><p>-m 4G 代表虚拟4GB内存</p><p>-d 300G 代表分配虚拟磁盘300GB</p></blockquote><h2 id="设置桥接模式的网络"><a href="#设置桥接模式的网络" class="headerlink" title="设置桥接模式的网络"></a>设置桥接模式的网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">multipass <span class="built_in">set</span> local.bridged-network=&lt;name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如重命名以太网2为lan2</span></span><br><span class="line"></span><br><span class="line">multipass <span class="built_in">set</span> local.bridged-network=lan2</span><br></pre></td></tr></table></figure><p><name> 就是网口的名称 比如 以太网，但是最好重命名为英文，比如lan1、lan2</p><h2 id="创建桥接模式的虚拟机vm4"><a href="#创建桥接模式的虚拟机vm4" class="headerlink" title="创建桥接模式的虚拟机vm4"></a>创建桥接模式的虚拟机vm4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass launch --name vm4 -c 4 -m 4G -d 300G --network bridged</span><br></pre></td></tr></table></figure><h3 id="TVBox-APK-下载地址-https-wkdaily-cpolar-cn-archives-free"><a href="#TVBox-APK-下载地址-https-wkdaily-cpolar-cn-archives-free" class="headerlink" title="TVBox APK 下载地址 https://wkdaily.cpolar.cn/archives/free"></a>TVBox APK 下载地址 <a href="https://wkdaily.cpolar.cn/archives/free">https://wkdaily.cpolar.cn/archives/free</a></h3><h3 id="视频里的脚本地址：https-github-com-wukongdaily-OrangePiShell"><a href="#视频里的脚本地址：https-github-com-wukongdaily-OrangePiShell" class="headerlink" title="视频里的脚本地址：https://github.com/wukongdaily/OrangePiShell"></a>视频里的脚本地址：<a href="https://github.com/wukongdaily/OrangePiShell">https://github.com/wukongdaily/OrangePiShell</a></h3><h3 id="❤️-扩展知识"><a href="#❤️-扩展知识" class="headerlink" title="❤️ 扩展知识"></a>❤️ 扩展知识</h3><p>可能有小伙伴会问 笔记本电脑没有 有线网卡。只有Wifi 应该如何桥接呢？有时候，windows 下的multipass 可能打印不出wifi网卡。比如 输入 multipass networks</p><p>遇到识别不出wifi 网卡的情况，其实还可以利用Hyper-V 管理器新建一个虚拟交换机。</p><blockquote><p>[!NOTE]</p><p>打开hyper-v管理器。点击【虚拟交换管理器】-【新建虚拟网络交换机】-【外部】-【创建】 然后你勾选一下你的 wifi 无线网卡，然后 名称的话 改成英文吧，比如 wifi 。这样应用之后，你再去打印multipass networks 就能识别wifi啦</p></blockquote><h2 id="如何使用RunMyNAS-编译iStoreNAS固件"><a href="#如何使用RunMyNAS-编译iStoreNAS固件" class="headerlink" title="如何使用RunMyNAS 编译iStoreNAS固件"></a>如何使用RunMyNAS 编译iStoreNAS固件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 同步项目到本地</span><br><span class="line"></span><br><span class="line">git clone https://github.com/linkease/iStoreNAS.git</span><br><span class="line"></span><br><span class="line"># 切换到该目录</span><br><span class="line"></span><br><span class="line">cd iStoreNAS</span><br><span class="line"></span><br><span class="line"># 执行项目 比如(参数  x86_64 or rk35xx or rk33xx)</span><br><span class="line"></span><br><span class="line">./runmynas.sh x86_64</span><br></pre></td></tr></table></figure><h2 id="更多进阶Multipass用法可参考Geekhour的博客-4-1章节"><a href="#更多进阶Multipass用法可参考Geekhour的博客-4-1章节" class="headerlink" title="更多进阶Multipass用法可参考Geekhour的博客 4.1章节"></a>更多进阶Multipass用法可参考Geekhour的博客 4.1章节</h2><p><a href="https://geekhour.net/">https://geekhour.net/</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> multipass </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC SSH功能，配合VIM编辑器对编程十分有帮助。</title>
      <link href="/articles/macssh/"/>
      <url>/articles/macssh/</url>
      
        <content type="html"><![CDATA[<h1 id="MAC-SSH功能，配合VIM编辑器对编程十分有帮助。"><a href="#MAC-SSH功能，配合VIM编辑器对编程十分有帮助。" class="headerlink" title="MAC SSH功能，配合VIM编辑器对编程十分有帮助。"></a>MAC SSH功能，配合VIM编辑器对编程十分有帮助。</h1><p>本文来源自网络</p><p>原文链接：<a href="https://blog.csdn.net/xcg132566/article/details/78797339">https://blog.csdn.net/xcg132566/article/details/78797339</a></p><p>MAC作为程序员的神器，在编程上的使用远超window的电脑，而MAC本身提供了SSH功能，配合VIM编辑器对编程十分有帮助。<br>使用ssh连接远程主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@192.168.100.100</span><br></pre></td></tr></table></figure><p>其中，username是登录用户名，@后接ip地址，点击确定之后输入密码即连接到远程主机。要查看当前有多少个处于登录状态的用户，可以使用who命令查看。</p><p>使用scp命令实现上传下载</p><h2 id="1、从服务器上下载文件"><a href="#1、从服务器上下载文件" class="headerlink" title="1、从服务器上下载文件"></a>1、从服务器上下载文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp username@servername:/path/filename /Users/mac/Desktop（本地目录）</span><br></pre></td></tr></table></figure><p>例如:scp <a href="mailto:&#114;&#x6f;&#x6f;&#116;&#x40;&#49;&#x32;&#51;&#x2e;&#x32;&#x30;&#55;&#x2e;&#49;&#x37;&#48;&#46;&#x34;&#48;">root@123.207.170.40</a>:&#x2F;root&#x2F;test.txt &#x2F;Users&#x2F;mac&#x2F;Desktop就是将服务器上的&#x2F;root&#x2F;test.txt下载到本地的&#x2F;Users&#x2F;mac&#x2F;Desktop目录下。注意两个地址之间有空格！</p><h2 id="2、上传本地文件到服务器"><a href="#2、上传本地文件到服务器" class="headerlink" title="2、上传本地文件到服务器"></a>2、上传本地文件到服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /path/filename username@servername:/path ;</span><br></pre></td></tr></table></figure><p>例如scp &#x2F;Users&#x2F;mac&#x2F;Desktop&#x2F;test.txt <a href="mailto:&#114;&#x6f;&#111;&#x74;&#x40;&#49;&#x32;&#x33;&#46;&#x32;&#x30;&#55;&#x2e;&#49;&#x37;&#x30;&#46;&#x34;&#48;">root@123.207.170.40</a>:&#x2F;root&#x2F;</p><h2 id="3、从服务器下载整个目录"><a href="#3、从服务器下载整个目录" class="headerlink" title="3、从服务器下载整个目录"></a>3、从服务器下载整个目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r username@servername:/root/（远程目录） /Users/mac/Desktop（本地目录）</span><br></pre></td></tr></table></figure><p>例如:scp -r <a href="mailto:&#x72;&#111;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x30;&#x2e;&#x31;&#48;&#49;">root@192.168.0.101</a>:&#x2F;root&#x2F; &#x2F;Users&#x2F;mac&#x2F;Desktop&#x2F;</p><h2 id="4、上传目录到服务器"><a href="#4、上传目录到服务器" class="headerlink" title="4、上传目录到服务器"></a>4、上传目录到服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r local_dir username@servername:remote_dir</span><br></pre></td></tr></table></figure><p>例如：scp -r test <a href="mailto:&#114;&#x6f;&#111;&#116;&#64;&#49;&#57;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#48;&#x2e;&#x31;&#48;&#x31;">root@192.168.0.101</a>:&#x2F;root&#x2F; 把当前目录下的test目录上传到服务器的&#x2F;root&#x2F; 目录</p><p>注：目标服务器要开启写入权限。<br>————————————————</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jellyfin解决封面乱码和字幕乱码</title>
      <link href="/articles/jellyfin/"/>
      <url>/articles/jellyfin/</url>
      
        <content type="html"><![CDATA[<h1 id="jellyfin解决封面乱码和字幕乱码"><a href="#jellyfin解决封面乱码和字幕乱码" class="headerlink" title="jellyfin解决封面乱码和字幕乱码"></a>jellyfin解决封面乱码和字幕乱码</h1><p><strong>封面乱码</strong></p><p>第一种 (不推荐，容器更新后会失效)</p><p>1.进入docker bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install fonts-noto-cjk-extra</span><br></pre></td></tr></table></figure><p>2.重启docker jellyfin</p><p>3.删除封面，重新扫描媒体库即可。</p><p>第二种(推荐，不会随着容器更新而失效)</p><p>1.创建一个新的挂载路径fonts&#x2F;dejavu 指向容器内路径 &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;truetype&#x2F;dejavu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">容器内有以下字体文件，这些字体是不支持中文显示的，我们要把这些字体替换掉</span><br><span class="line">DejaVuSans-Bold.ttf</span><br><span class="line">DejaVuSans.ttf</span><br><span class="line">DejaVuSansMono-Bold.ttf</span><br><span class="line">DejaVuSansMono.ttf</span><br><span class="line">DejaVuSerif-Bold.ttf</span><br><span class="line">DejaVuSerif.ttf</span><br></pre></td></tr></table></figure><p>2.去网上下一个自己喜欢的风格并且支持简体中文的字体，比如这个：<br><a href="https://github.com/notofonts/noto-cjk/releases">https://github.com/notofonts/noto-cjk/releases</a></p><p>3.在字体文件中选一个复制6份，重命名为以上文件名，然后将这几个字体复制进fonts&#x2F;dejavu目录</p><p>4.重启docker jellyfin，删除封面，重新扫描媒体库即可。</p><hr><p><strong>字幕乱码</strong></p><p>1.挂载路径下的config中创建fonts文件夹</p><p>2.下载字体包 <a href="https://raw.githubusercontent.com/CodePlayer/webfont-noto/master/release/NotoSansCJKsc-hinted-standard.zip">Noto Sans SC woff2</a></p><p>3.解压包，将 NotoSansCJKsc-Medium.woff2 放入fonts目录</p><p>4.切换到控制台–&gt;播放–&gt;勾选启用备用字体，填入路径&#x2F;config&#x2F;fonts路径，保存即可。</p><p><img src="https://cdn.jsdelivr.net/gh/zz3656/picgo@main/img/241c98b6bf3b.png" alt="file"></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nas </tag>
            
            <tag> jellyfin </tag>
            
            <tag> 家庭影院 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各云盘VPS写入ROS方法</title>
      <link href="/articles/routeros/"/>
      <url>/articles/routeros/</url>
      
        <content type="html"><![CDATA[<h1 id="各云盘VPS写入ROS方法"><a href="#各云盘VPS写入ROS方法" class="headerlink" title="各云盘VPS写入ROS方法"></a>各云盘VPS写入ROS方法</h1><p> 转自：2023&#x2F;12&#x2F;08 12:34 <a href="http://a57068368.3322.org:880/category-2.html">无线路由类</a> 43 0</p><p>先在VPS上安装debian12<br>下载routeros的CHR镜像</p><p>代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.mikrotik.com/routeros/7.15.2/chr-7.15.2.img.zip</span><br></pre></td></tr></table></figure><p> 说明，最新的下载地址请参考</p><p><a href="https://mikrotik.com/download">https://mikrotik.com/download</a><br>需要下载 Cloud Hosted Router类别下的 Raw disk image</p><p>解压镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip chr-7.15.2.img.zip</span><br></pre></td></tr></table></figure><p> 把chr-6.48.3.img文件名改为为chr.img</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> chr-7.15.2.img chr.img</span><br></pre></td></tr></table></figure><p> 查看镜像的Start值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -lu chr.img</span><br></pre></td></tr></table></figure><p> 如果Start值不是1， 那么请注意下面的命令.</p><p>挂载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop,offset=512 chr.img /mnt</span><br></pre></td></tr></table></figure><p> 如果上面Start值不是1, 那么请用值乘以512.</p><p>如果是2, 那么offset&#x3D;1024<br>RouterOS v7.x的Start值为34<br>那么代码应该是</p><p>代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop,offset=33571840 chr.img /mnt</span><br></pre></td></tr></table></figure><p> 获取IP信息和设置变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ADDR0=`ip addr show ens3 | grep global | <span class="built_in">cut</span> -d<span class="string">&#x27; &#x27;</span> -f 6 | <span class="built_in">head</span> -n 1`</span><br><span class="line"></span><br><span class="line">GATE0=`ip route list | grep default | <span class="built_in">cut</span> -d<span class="string">&#x27; &#x27;</span> -f 3`</span><br></pre></td></tr></table></figure><p> 注意，这里的网卡名称是eth0, 如果不是eth0, 那么根据自己的VPS网卡信息更改.</p><p>查询方法, ifconfig, 看看这个网卡名称</p><p>创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /mnt/rw</span><br></pre></td></tr></table></figure><p> 设置routeros开机的时候自动设置网络信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/ip address add address=<span class="variable">$ADDR0</span> interface=[/interface ethernet find where name=ether1]</span></span><br><span class="line"><span class="string">/ip route add gateway=<span class="variable">$GATE0</span></span></span><br><span class="line"><span class="string">&quot;</span> &gt; /mnt/rw/autorun.scr</span><br></pre></td></tr></table></figure><p>验证设置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/rw/autorun.scr</span><br></pre></td></tr></table></figure><p>卸载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br></pre></td></tr></table></figure><p> 设置文件系统为只读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> u &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure><p> 查看硬盘路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -lu</span><br></pre></td></tr></table></figure><p> 以本次操作为例, 我的VPS硬盘路径是</p><p>&#x2F;dev&#x2F;vda<br>DD RouterOS系统镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=chr.img bs=1024 of=/dev/vda &amp;&amp; reboot</span><br></pre></td></tr></table></figure><p> 如果硬盘路径不同，请根据自己的情况修改.</p><p>有些机器不会自动重启, 那么运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;b&quot;</span> &gt; /proc/sysrq-trigger</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软路由 </tag>
            
            <tag> routeros </tag>
            
            <tag> ros </tag>
            
            <tag> vps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云/腾讯云 安装爱快系统步骤</title>
      <link href="/articles/aliyunikuai/"/>
      <url>/articles/aliyunikuai/</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云-腾讯云-安装爱快系统步骤"><a href="#阿里云-腾讯云-安装爱快系统步骤" class="headerlink" title="阿里云&#x2F;腾讯云 安装爱快系统步骤"></a>阿里云&#x2F;腾讯云 安装爱快系统步骤</h1><p>开始: 随便安装一个ubuntu系统</p><h2 id="步骤1-下载ISO安装包"><a href="#步骤1-下载ISO安装包" class="headerlink" title="步骤1: 下载ISO安装包"></a>步骤1: 下载ISO安装包</h2><p>x32位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x32_3.7.14_Build202408011011.iso -O ikuai8.iso</span><br></pre></td></tr></table></figure><p>x64位</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x64_3.7.14_Build202408011011.iso -O ikuai8.iso</span><br></pre></td></tr></table></figure><h2 id="步骤2-挂载ISO镜像"><a href="#步骤2-挂载ISO镜像" class="headerlink" title="步骤2: 挂载ISO镜像"></a>步骤2: 挂载ISO镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount ikuai8.iso /mnt</span><br></pre></td></tr></table></figure><h2 id="步骤3-复制ISO镜像启动文件"><a href="#步骤3-复制ISO镜像启动文件" class="headerlink" title="步骤3: 复制ISO镜像启动文件"></a>步骤3: 复制ISO镜像启动文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -rpf /mnt/boot /</span><br></pre></td></tr></table></figure><h2 id="步骤4"><a href="#步骤4" class="headerlink" title="步骤4:"></a>步骤4:</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>##步骤5: 在腾讯云&#x2F;阿里云的操作页面打开VNC界面: 登录&#x2F;远程登录 –&gt; VNC登录，正常ISO安装爱快系统<br>##步骤6: 进入控制台&quot;开启外网访问WEB&quot;<br> o、其他选项 –&gt; 2、开启外网访问web</p><p>#结束</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 爱快 </tag>
            
            <tag> 软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绿化大师环境盖伦下载机如何修改绝地求生默认游戏特效</title>
      <link href="/articles/internetcafe/"/>
      <url>/articles/internetcafe/</url>
      
        <content type="html"><![CDATA[<p>声明：本文非博主原创，方法和理论均来自网络。<br>1 首先我们先在一台客户机提取我们已经设置好的游戏特效文件（方法就是正常进入游戏，然后设置你需要的特效等级就行），文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:/Users/Administrator/AppData/Local/TslGame/Saved/Config/WindowsNoEditor </span><br></pre></td></tr></table></figure><p>这个路径下的GameUserSettings这个名字的文件是绝地的配置文件<br>2 然后把这个配置文件拷贝到服务器上开机任务目录里<br>拷贝三分，改下名字</p><p>然后在目录里新建一个批处理文件并右键点编辑输入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">del D:/网络游戏/绝地求生大逃杀/zhconfig/1_GameUserSettings.ini</span><br><span class="line">del D:/网络游戏/绝地求生大逃杀/zhconfig/2_GameUserSettings.ini</span><br><span class="line">del D:/网络游戏/绝地求生大逃杀/zhconfig/3_GameUserSettings.ini</span><br><span class="line">del D:/网络游戏/绝地求生大逃杀/GameConfigSet.exe</span><br><span class="line">rd D:/网络游戏/绝地求生大逃杀#zmjsq# /s/q</span><br><span class="line">copy steam.bat D:/网络游戏/绝地求生大逃杀/ /y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">XCOPY D:/维护软件/开机通道/绝地求生/1_GameUserSettings.ini D:/网络游戏/绝地求生大逃杀/zhconfig /s /e</span><br><span class="line">XCOPY D:/维护软件/开机通道/绝地求生/2_GameUserSettings.ini D:/网络游戏/绝地求生大逃杀/zhconfig /s /e</span><br><span class="line">XCOPY D:/维护软件/开机通道/绝地求生/3_GameUserSettings.ini D:/网络游戏/绝地求生大逃杀/zhconfig /s /e</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>请自行替换自己的客户机游戏路径（D:#网络游戏#绝地求生大逃杀）及服务器开机通道路径（D:#维护软件#开机通道#绝地求生）保存添加开机任务即可<br>注释：本批处理是博主在联系盖伦官方后索要的批处理基础上修改的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“del D:/网络游戏/绝地求生大逃杀/GameConfigSet.exe” </span><br></pre></td></tr></table></figure><p>删除绝地求生游戏运行时自动根据显卡型号配置特效的执行文件（实测：1060显卡本来是可以高特效流畅游戏的但是自动配置的特效却是最低）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“rd D:/网络游戏/绝地求生大逃杀/zmjsq# /s/q”</span><br></pre></td></tr></table></figure><p>删除绝地求生游戏自带的追梦加速器文件夹（毕竟不是所有的网吧都用追梦加速器，如果是追梦加速器环境可删除本行。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“copy steam.bat D:/网络游戏/绝地求生大逃杀/ /y”</span><br></pre></td></tr></table></figure><p>复制steam.bat文件替换游戏目录文件（最新更新的版本里吃鸡游戏还是会自动启动追梦加速器的，我们从游戏目录里复制出来一份steam.bat文件并编辑删除“START zmjsq\ZsSteamjsq.exe”这一行把steam.bat文件保存到开机通道目录里）<br>至此，可以愉快的按照自己的设置好的特效愉快的吃鸡了。祝各位同僚工作顺利、财源广进！</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无盘软件 </tag>
            
            <tag> 工作日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WINDOWS系统下恢复群晖分区下的文件</title>
      <link href="/articles/system/"/>
      <url>/articles/system/</url>
      
        <content type="html"><![CDATA[<p>玩群晖也有几年了，从万由的J1900时代就搞了台NAS。当时天天泡论坛看大家都是讲群晖，所以回来也毫不犹豫的刷的群晖。发这个帖子不是为了讲故事。起因也很简单。就是因为我把机器刷回了万由系统，所幸的是我保留了放照片的盘。想挂上去读取的时候发现是读取不了的。放到我另外一台918+的黑群上也是显示未初始化，我就寻思着把群晖的硬盘挂到windows系统下把文件恢复出来。度娘找了一番资料后掉了不少坑，也有读取到盘符的软件。但是无法打开盘符，但功夫不负有心人。最后的最后让我找到了一片类似的文章，发现了UFS_Explorer这个软件。本人已测试正常使用，所以贴出这篇文章，一是给自己备忘防止以后再有需要，二是给大家提供一下方法（少走点弯路）。因为是在另外一台机器操作的，所以本文没有任何图片说明！<br>这个软件百度就有下载，但是好多都用不了。官方上面我也下载了，但是不注册的话只能恢复一小部分。我把文件打包并且加了说明文件（文档内有详细的安装和使用步骤）放到本文附件里供大家下载。</p><p>软件使用说明：<br>注意：因为软件是英文版的 也没有汉化语言包所以你只要按照我说的步骤操作就一定能恢复你的文件<br>1、把压缩包正常解压<br>2、正常安装解压后文件夹里的ufsxpci文件到系统内 不懂英文的不要紧 正常点next 有打勾的地方就打上勾 最后一步点完后会自动打开软件 关闭即可<br>3、开始菜单程序右键打开刚安装的UFS Explorer文件夹内的UFS Explorer Professional Recovery属性 查找目标<br>4、复制压缩包内另外一个注册机UFS-Ex-Crk到刚才打开的UFS EXPLORER文件安装目录并打开 然后点击PachExe完成注册<br>5、打开安装目录内ufsxpci.exe 你会发现软件内已经正常识别群晖的分区 找到群晖硬盘最大的那个分区 双击打开 右侧会显示群晖内的文件系统 选择你要恢复的文件夹 右键 选择save this object to…… 此时会打开一个需要保存的路径 选择你要把文件保存到那里后点select 然后会出来另外一个提示 把最下面 apply to all conflicts （这个选项应该是跳过所有覆盖提示）打勾<br>然后选择最上面 replace existing file with new one （百度翻译：用新的文件替换现有文件）就可以开始恢复你的文件了 下面两项我没有测试 反正我只要求能恢复出来就行了</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 文件恢复 </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用GIt命令上传项目到GitHub指定仓库</title>
      <link href="/articles/githelp/"/>
      <url>/articles/githelp/</url>
      
        <content type="html"><![CDATA[<p>利用GIt命令上传项目到GitHub指定仓库<br>1.建立GIt可管理的仓库 cd到本地项目根目录下，执行 git init 命令：</p><p>  git init<br>2.将项目的所有文件添加到仓库中(注意add后面有一个“ . ”)</p><p>  git add .<br>3.将上一步add的文件commit到仓库</p><p>  git  commit -m “提交的说明注释”<br>4.到GitHub官网新建一个仓库（Create repository）,并复制仓库地址</p><p>5.将本地仓库关联到GitHub新建的仓库上</p><p>  git remote add origin <a href="https://github.com/Love-LG/Javaweb-firstcup-war">https://github.com/Love-LG/Javaweb-firstcup-war</a><br>6.使用pull命令</p><p>  git pull origin master<br>7.将本地仓库的文件上传到GitHub远程仓库</p><p>  git push -u origin master<br>总结：<br>在最后使用命令“git push -u origin master”将本地仓库的文件上传的远程的GitHub仓库时可能会遇到如下错误</p><p>提示上面错误信息的主要原因是我们在GitHub上新建仓库时一般会选择生成一个README.md的说明文档，因此我们必须使用以下命令将README.md下载到我们的本地仓库再使用<br>git push -u origin master命令就能成功将代码上传到GitHub的远程仓库。</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管第一章</title>
      <link href="/articles/%E5%B1%8C%E4%B8%9D%E7%BD%91%E7%AE%A1%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/articles/%E5%B1%8C%E4%B8%9D%E7%BD%91%E7%AE%A1%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>02年时候我因沉迷网吧在初中三年级辍学，在家玩了半年。后来家人想让我学习一门手艺，最后我选择了学计算机。之后03年至05年的我就一直再郑州某职业中专就读，当时我们学校里的专业普遍都是办公自动化、网页设计、FLASH、PHOTOSHOP以及visualfoxpro这些。所以我也和大多数上中专的一样，从办公自动化开始学习。后期也选修了不少其他课程，像网页制作软件dreamweaver。photoshop也有学习了几个月，而且还考了证书。上学期间第一年暑假就有做过暑假工，本意在提前感受一下社会。但是完全并没有给自己以后步入社会创造什么经验……反倒是中途因为跑了一单被罚了半个月工资直接辞职了。不过最后依然发了100多元的工资。我拿着这点钱直接就去了网吧，根本就没跟我家人说我辞职了……就这样一早起来就去网吧打早市，早市12点结束就转计费。当时的我似乎也不会玩什么游戏，就见赵坤在学校时候玩奇迹MU。我也就索性尝试玩这个了。当时是这个游戏高科技最猖獗的时候，网上随处都可以下载脱机的那种。就是不用任何操作，只有一个简单的界面脚本。设置好刷怪的地方，掉什么东西捡取什么东西卖掉这样子。然后点开始就行了。整个过程是非常无聊的，但不知道为什么。当年的我非常好这一口……就这样我每天白天去网吧上网，晚上正常回家休息。直到把我这点工资花完。本想着我也不会玩这个游戏到最后把这些天刷出来的宝石什么的给赵坤来着，结果到开学时候怎么都想不起来账号密码了……你说这事尴尬不…… 2年的在校学习，后面就是出去实习了。其实实习也算是毕业。但是毕业以后也比较盲从，在校时候完全没有想过自己学的专业出去以后可以做什么事情。虽然这过程中家人还有朋友都有给我介绍过工作，往后会穿插到各个章节中。比如去某某仓库给人当仓库管理、去某某洗浴中心给人当客房服务员（这个比较重要，让我遇到了我的现任老婆。）去某某工地给人修路什么的，总之也是什么都干……印象最深刻的是去郑州科技市场，为什么呢？主要因为我毕业这头几个月里做的工作竟然没有一个行业是我学的专业相关的，（在人民路解放路给大山外语发传单，见人就说hello dashan english……类似这样逗比的事儿刚毕业几个月我干了不少。）而我自己又不想浪费了我在学校几年学习过的东西。因为是家人花钱供我学知识的，我不想让他们以为我上学和不上学没有任何区别白瞎学了这几天电脑。而电脑相关的工作，自然而然的就想到了卖电脑了。（好像也没有什么不对的）只不过这个选择让我第一次感受到了技能的重要性，当年的郑州科技市场已经略见规模。各种商家商户比比皆是，创新大厦是那几年里比较火爆的一个商场。所以我就在这栋楼随便找了一家去应聘去了。你好！请问你们这里招人吗？这是我进门第一句话，店里的人回答是的，你都会什么？然后我就非常自豪的把我在学校学过的专业统统说了一遍。店里人员回答：不好意思你在看看别家吧！当时对我的打击还是蛮大的，不过想想也是。我学的专业和人家卖电脑有毛线关系？继续去第二家，我涨了点记性我说我会组装电脑。换来的结果却是一把螺丝放我面前，让我区分一下那个是硬盘的，那个是主板的。我当时就懵逼了！没有再说下去直接去下一家了，这一次我长记性了。到第三家直接就是说，你好，我刚从学校毕业想来这里学修电脑。工资什么的我不要，什么时候你觉得合适了在给我发工资都行。果然而然，我顺利的当时直接上班了。我的第一份和所学专业相关的工作就这么愉快的开始了！接下来的两三个月里是我万万没想到的，我连续为这家公司送了三个月的货，其他的什么都不让我做……当然这期间也有段小插曲，我来科技市场是告诉过家人的。工资不重要重要的是你开心就行，这是我爸给我说的原话，我当时为了尽快入行也随行就市过一次，为了学点东西好去跟同学装逼我去找我爸要钱请公司里员工吃饭。（当时我在公司是没有工资的，自掏腰包请客主要就是是想找人学习一点电脑基础知识的……大概就是这个意思，结果请客当晚大家说的好好的，第二天上班后，一切恢复如初！这也是我后来为什么不喜欢去郑州的原因之一！我觉得郑州人生意人都是人前一套背后一套。）送货过程虽然无聊，但是也让我认识了一些很好的商家。当然这些上家也成了我以后开店时候的的渠道合作伙伴。当然，不排除好的坏的。中关大厦7楼的704张磊是我记忆里最深刻的。我们公司做光驱的，在哪个年代光驱是类似于现在电脑里硬盘的价值！那时候几乎每天都要往他们公司送货，他公司是组装电脑的。后续我开店以后我们也合作了几个年头。回归正题，看现在这样的情况的话，就比较尴尬了。本来就没有工资就想着能偷学点东西，哪怕会装个系统以后也可以给女同学修电脑不是……结果现实却是残酷的。于是当天我就辞了工，老板当然也没说什么。辞工以后一个人在街上乱转。漫无目的这样子吧。后来再回家路上转公交车时候忽然看到站牌西边一家网吧招聘网管的广告，玻璃门上清晰的写着：招聘网管，学历不限等等……当时我脑袋猛然想到，修电脑？哪里的电脑有网吧的电脑坏的毛病奇葩呢！科技市场顶多也就是组装新电脑比较多，但是要说维修。那种场合能有网吧里电脑毛病多的！于是乎，我毅然而然的走进了网吧，吧台里的妹子长得很标致……（不排除这也是我非要在这家网吧上班的原因之一）<br>　　“你好，请问你们这里招网管吗？”<br>　　“店长出门了，你等下他一会回来。”<br>　　得知店长出门了，我就直接在网吧的休息区等店长了，大概看了一下这网吧。并不是那种特别出众的类型，装修也比较老旧了。形式我大概看了一下觉得应该在一百台上下这样。随便转了一圈就又老实坐休息区等了，不出一会有一个穿一身正装的人进门了，随后在吧台站了一会和收银妹子说了几句话后开始往我这里走了过来。人还没有走到话就已经说出来了，你是来应聘网管的吗？我回，是的！很随便的问了我一点个人信息后就听他说身份证登记一下然后今晚来上班吧。 OωO 我当时表情就和这个表情一样，真的就是这样 OωO 这么低门槛？考虑到我之前科技市场应聘的经历。其实我准备了好多过天话要说的（比如说我会装系统，会修电脑什么的云云。总之就是先糊弄过去，剩下的过一天算一天！）这么简单的应聘搞的确搞得我有点防不胜防……碍于我家离网吧不是太近索性我也就没有走，店长告诉我晚上7点开始上班值夜班。我就直接在网吧里等到了晚上7点。时间过的很快，转眼已经7点。开始上班了，店长先集合工作人员（包括我）交代了一下。因为我当时脑子还在短路中没有恢复过来，所以店长说了什么我是真一点都没有听到。完了就听到最后一句，那大家开始干活吧！干活？干什么活？接着我就一脸懵圈只能先看看其他工作人员在做什么，发现都在和顾客说话。那我该做什么？正在这时店长喊了一句，人员清理完之后就开始搬沙发吧。这时候我才明白，为什么我白天的应聘那么随意了……然后我也跟着其他人开始搬沙发，当然，我不知道搬到哪里只能跟着别人去哪我去哪。也不算太远出门往右走了100米左右开始上楼，好在是2楼并不是特别高。就这样我和一帮同事一直搬到凌晨12点多才算是基本上搬完，剩下的小件东西店长说明天白班的人拿。当时听到这句话身体一下子轻松了，想着终于是可以休息一下子了。一伙人瘫坐在刚搬上来还没摆放位置的沙发上。就在刚坐下几分钟这会，从楼梯那边传来了一阵脚步声，随后进门来了一个年纪大约20多岁的人，上来后说了一句足以让我的一圈同事们崩溃的一句话！（未完待续）</p>]]></content>
      
      
      <categories>
          
          <category> 随便写写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
